version: "3.3"


services:
  db: 
    image: postgres
    volumes: 
    - ./data/db:/var/lib/postgresql/data 
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres14641
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - back
  my-mongodb:
    image: mongo:4.2.3-bionic
    container_name: my-mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      # seeding scripts
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      # named volumes
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - back
  # my-mongoclient:
  #   # build will get tagged with 'image'
  #   build: ./my-mongoclient
  #   image: fabianlee/my-mongoclient:3.9
  #   container_name: my-mongoclient
  #   environment:
  #     - MONGO_SERVER=my-mongodb
  #     - MONGO_INITDB_DATABASE=test
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=admin
  #   ports:
  #     - 27018:27018
  #   networks:
  #     - back
  #   depends_on:
  #     - my-mongodb
  mongoclient:
      image: mongoclient/mongoclient:latest
      container_name: mongoclient
      hostname: mongoclient
      depends_on:
        - my-mongodb
      networks:
        - back
      ports:
        - 3300:3000

  # nginx:
  #   build: ./nginx
  #   image: "nginx:latest"
  #   command: [nginx-debug, '-g', 'daemon off;']
  #   volumes:
  #     - dist:/var/www/dist
  #     - static:/static
  #   networks:
  #     - front
  #     - back
  #   ports:
  #     - "80:8080"
  #   depends_on:
  #     - frontend
  #     - daphne
  #     - web
  #   links:
  #     - frontend
  #     - daphne
  #     - web
  
    # volumes:
    #   - type: 'bind'
    #     source: './media'
    #     target: '/django_jobfinder_socialnetwrok/media'
      
      # - type: 'bind'
      #   source: './static'
      #   target: '/django_jobfinder_socialnetwrok/static'
  
  redis:
    image: redis:alpine
    networks:
      - back
    ports:
      - "6379:6379"
    container_name: redis

  daphne:
    restart: always
    build: ./app
    image: "channel_prod:latest"
    working_dir: /app/
    command: bash -c " daphne -b 0.0.0.0 -p 9542 core.asgi:application"
    volumes:
      -  ./app:/app
    ports:
      - "9542:9542"
    env_file:
      - ./app/app_env
    networks:
      - front
      - back
    depends_on:
      - redis
      - db 
    links:
      - redis
      - db
  # worker:
  #   build: ./app
  #   image: "channel_prod:latest"
  #   working_dir: /app/
  #   command: bash -c "python manage.py runworker channel_layer"
  #   volumes:
  #     -  ./app:/app
  #   env_file:
  #     - ./app/app_env
  #   networks:
  #     - front
  #     - back
  #   depends_on:
  #     - redis
  #     - db
  #   links:
  #     - redis
  #     - db
   
  web:
    build: ./app
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./app:/app
      - static:/app/static
    ports:
      - "8000:8000"
    expose:
      - "8000"
    networks:
      - back
      - front
    depends_on:
      - redis
      - db
    links:
      - redis
      - db
  
  # frontend:
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true

  #   build: 
  #     context: ./CHAT
  #   volumes:
  #     - /CHAT/node_modules
  #     - ./CHAT:/CHAT
  #     - dist:/CHAT/dist
  #   ports:
  #     - "80:80"
  #   expose:
  #     - "80"
  #   networks:
  #     - back
  #     - front


volumes:
  static:
  react_build:
  dist:
  mongodb:
  mongoconfig:

networks:
  front:
  back:
